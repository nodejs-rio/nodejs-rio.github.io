{"version":3,"sources":["webpack:///./node_modules/has-scroll-hook/useHasScroll.js","webpack:///./src/gatsby-theme-sky-lite/templates/home.js"],"names":["hasScroll","Boolean","window","scrollY","_useState","_useState2","scroll","setScroll","onScroll","document","addEventListener","removeEventListener","Posts","posts","pathPrefix","Grid","container","spacing","map","node","excerpt","fileAbsolutePath","frontmatter","id","title","featuredImage","postDate","path","basename","split","splice","join","item","xs","sm","key","Card","url","HomeTemplate","data","site","siteMetadata","description","templates","allMdx","edges","useHasScroll","Layout","elevateAppBar","Box","display","flexDirection","textAlign","paddingTop","paddingBottom","paddingX","style","backgroundColor","theme","palette","primary","main","color","common","white","clipPath","marginBottom","Typography","variant","fontWeight","fontFamily","flexGrow","marginX","width","maxWidth","padding","length","justifyContent","marginTop","Button","component","Link","to","pageQuery"],"mappings":"sQAEW,EAAe,WAExB,IAAIA,EAAY,WACd,OAAOC,QAAQC,OAAOC,UAGpBC,EAAY,oBAAS,GACrBC,EAAa,YAAeD,EAAW,GACvCE,EAASD,EAAW,GACpBE,EAAYF,EAAW,GAiB3B,OAfA,qBAAU,WACR,IAAIG,EAAW,WAEbF,IAAWN,KAAeO,EAAUP,MAOtC,OAFAQ,IACAC,SAASC,iBAAiB,SAAUF,GAC7B,WAELC,SAASE,oBAAoB,SAAUH,MAExC,CAACF,EAAQC,IACLD,G,kFCnBT,IAAMM,EAAQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACtB,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACtBJ,EAAMK,KACL,YAMO,IAAD,IALJC,KACEC,EAIE,EAJFA,QACAC,EAGE,EAHFA,iBAGE,IAFFC,YAAeC,EAEb,EAFaA,GAAIC,EAEjB,EAFiBA,MAAOC,EAExB,EAFwBA,cAGtBC,EAAWC,IACdC,SAASP,GACTQ,MAAM,KACNC,OAAO,EAAG,GACVC,KAAK,KACR,OACE,kBAAChB,EAAA,EAAD,CAAMiB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,IAAKZ,GAC7B,kBAACa,EAAA,EAAD,CACEX,cAAeA,EACfD,MAAOA,EACPa,IAAG,IAAMvB,EAAN,IAAoBS,EACvBG,SAAUA,EACVN,QAASA,UAUV,SAASkB,EAAT,GAaX,IAAD,IAZDC,KAYC,IAXCC,KACEC,aACEjB,EASL,EATKA,MACAkB,EAQL,EARKA,YAEW5B,EAMhB,EAPK6B,UACE9B,MAASC,WAIED,EAElB,EAFC+B,OAAUC,MAIN7C,EAAY8C,IAElB,OACE,kBAACC,EAAA,EAAD,CAAQC,cAAehD,GACrB,kBAACiD,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,UAChC,kBAACF,EAAA,EAAD,CACEG,UAAU,SACVC,WAAY,EACZC,cAAe,GACfC,SAAU,EACVC,MAAO,CACLC,gBAAiBC,IAAMC,QAAQC,QAAQC,KACvCC,MAAOJ,IAAMC,QAAQI,OAAOC,MAC5BC,SAAU,0CACV,oBAAqB,4CAGvB,kBAAChB,EAAA,EAAD,CAAKiB,aAAc,GACjB,kBAACC,EAAA,EAAD,CACEL,MAAM,UACNM,QAAQ,KACRZ,MAAO,CACLa,WAAY,OACZC,WACE,mEACFJ,aAAc,IAGf1C,GAEH,kBAAC2C,EAAA,EAAD,CAAYL,MAAM,UAAUM,QAAQ,SACjC1B,MAKT,kBAACO,EAAA,EAAD,CAAKsB,SAAU,EAAGC,QAAQ,OAAOC,MAAM,OAAOC,SAAU,KACtD,kBAACzB,EAAA,EAAD,CAAK0B,QAAS,GACZ,kBAAC,EAAD,CAAO9D,MAAOA,EAAOC,WAAYA,IAChCD,EAAM+D,OAAS,GACd,kBAAC3B,EAAA,EAAD,CACEC,QAAQ,OACR2B,eAAe,WACfF,QAAS,EACTG,UAAW,GAEX,kBAACC,EAAA,EAAD,CACEX,QAAQ,YACRN,MAAM,YACNkB,UAAWC,OACXC,GAAE,IAAMpE,EAAN,WAJJ,gBAgBP,IAAMqE,EAAS","file":"component---src-gatsby-theme-sky-lite-templates-home-js-4ce52f4c59f91761bcc0.js","sourcesContent":["import _slicedToArray from \"/Users/eduardochaves/projects/nodejs-rio.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nexport var useHasScroll = function useHasScroll() {\n  /* Check if the scrollbar has an offset. */\n  var hasScroll = function hasScroll() {\n    return Boolean(window.scrollY);\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      scroll = _useState2[0],\n      setScroll = _useState2[1];\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      /* Update the state when the scroll position changes. */\n      scroll !== hasScroll() && setScroll(hasScroll());\n    };\n    /* Set the initial scroll state. */\n\n\n    onScroll();\n    document.addEventListener(\"scroll\", onScroll);\n    return function () {\n      /* Clean up the event listener. */\n      document.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [scroll, setScroll]);\n  return scroll;\n};","import React from \"react\";\nimport path from \"path\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Card from \"../components/Card\";\nimport { Box, Button, Grid, Typography } from \"@material-ui/core\";\nimport theme from \"../style/theme\";\nimport { useHasScroll } from \"has-scroll-hook\";\n\nconst Posts = ({ posts, pathPrefix }) => {\n  return (\n    <Grid container spacing={3}>\n      {posts.map(\n        ({\n          node: {\n            excerpt,\n            fileAbsolutePath,\n            frontmatter: { id, title, featuredImage }\n          }\n        }) => {\n          const postDate = path\n            .basename(fileAbsolutePath)\n            .split(\"-\")\n            .splice(0, 3)\n            .join(\"-\");\n          return (\n            <Grid item xs={12} sm={4} key={id}>\n              <Card\n                featuredImage={featuredImage}\n                title={title}\n                url={`/${pathPrefix}/${id}`}\n                postDate={postDate}\n                excerpt={excerpt}\n              />\n            </Grid>\n          );\n        }\n      )}\n    </Grid>\n  );\n};\n\nexport default function HomeTemplate({\n  data: {\n    site: {\n      siteMetadata: {\n        title,\n        description,\n        templates: {\n          posts: { pathPrefix }\n        }\n      }\n    },\n    allMdx: { edges: posts }\n  }\n}) {\n  /* Get the vertical scrollbar offset as a boolean value. */\n  const hasScroll = useHasScroll();\n\n  return (\n    <Layout elevateAppBar={hasScroll}>\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Box\n          textAlign=\"center\"\n          paddingTop={4}\n          paddingBottom={12}\n          paddingX={8}\n          style={{\n            backgroundColor: theme.palette.primary.main,\n            color: theme.palette.common.white,\n            clipPath: \"polygon(0 0, 100% 0, 100% 60%, 0% 100%)\",\n            \"-webkit-clip-path\": \"polygon(0 0, 100% 0, 100% 60%, 0% 100%)\"\n          }}\n        >\n          <Box marginBottom={4}>\n            <Typography\n              color=\"inherit\"\n              variant=\"h2\"\n              style={{\n                fontWeight: \"bold\",\n                fontFamily:\n                  \"Work Sans, -apple-system, BlinkMacSystemFont, Roboto, sans-serif\",\n                marginBottom: 4\n              }}\n            >\n              {title}\n            </Typography>\n            <Typography color=\"inherit\" variant=\"body1\">\n              {description}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <Box flexGrow={1} marginX=\"auto\" width=\"100%\" maxWidth={960}>\n        <Box padding={2}>\n          <Posts posts={posts} pathPrefix={pathPrefix} />\n          {posts.length > 1 && (\n            <Box\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              padding={1}\n              marginTop={1}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                component={Link}\n                to={`/${pathPrefix}/page/1`}\n              >\n                View All\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n        templates {\n          posts {\n            pathPrefix\n          }\n        }\n      }\n    }\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"/content/posts/\" } }\n      sort: { order: DESC, fields: [fileAbsolutePath] }\n      limit: $limit\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          fileAbsolutePath\n          frontmatter {\n            id\n            title\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}